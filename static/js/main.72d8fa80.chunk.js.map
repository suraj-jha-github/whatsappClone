{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","seed","setSeed","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","message","displayName","onChange","e","target","type","placeholder","onClick","preventDefault","console","log","add","firbase","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sbAaQA,EADYC,IAASC,cAVN,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,aACnBC,MAAO,0CACPC,cAAe,iBAIIC,YACfC,EAAKV,IAASU,OACdC,EAAU,IAAIX,IAASU,KAAKE,mBAGnBb,ICjBJc,EAAcC,0BACdC,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,aAAaC,EAAvB,EAAuBA,SAAvB,OACxB,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAAQC,GAAjD,SACKC,KAGII,EAAc,kBAAIC,qBAAWV,IC4F3BW,MAvFf,WAAiB,IAAD,MACUC,qBADV,mBACNC,EADM,KACAC,EADA,OAEQF,qBAFR,mBAENG,EAFM,KAEDC,EAFC,KAGNC,EAASC,cAATD,OAHM,EAIgBL,qBAJhB,mBAINO,EAJM,KAIGC,EAJH,OAKgBR,mBAAS,IALzB,mBAKNS,EALM,KAKGC,EALH,OAMWb,IANX,mBAMLc,EANK,KAMLA,KA8BP,OApCY,KASZC,qBAAU,WACHP,IACC/B,EAAGuC,WAAW,SAASC,IAAIT,GAAQU,YAAW,SAAAC,GAAQ,OAAER,EAAYQ,EAASC,OAAOC,SACpF5C,EAAGuC,WAAW,SAASC,IAAIT,GAAQQ,WAAW,YAAYM,QAAQ,YAAY,OAAOJ,YAAW,SAAAC,GAAQ,OAAGN,EAAYM,EAASI,KAAKC,KAAI,SAAAP,GAAG,OAAEA,EAAIG,iBAIxJ,CAACZ,IACHO,qBAAU,WACNR,EAAQkB,KAAKC,MAAsB,IAAhBD,KAAKE,aAE1B,IAiBE,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAASC,IAAG,iDAA4CxB,EAA5C,UACZ,sBAAKsB,UAAU,mBAAf,UACI,6BAAKlB,IACL,0CAAa,IAAK,IAAIqB,KAAJ,UAASnB,EAASA,EAASoB,OAAQ,UAAnC,iBAAS,EAA8BC,iBAAvC,aAAS,EAAyCC,UAAUC,oBAElF,sBAAKP,UAAU,oBAAf,UACI,cAACQ,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,IAAD,YAMZ,qBAAKR,UAAU,aAAf,SACKhB,EAASY,KAAI,SAAAa,GAAO,aAChB,oBAAGT,UAAS,wBAAmBS,EAAQhB,OAAOP,EAAKwB,aAAe,kBAAlE,UACA,sBAAMV,UAAU,aAAhB,SAA8BS,EAAQhB,OAClCgB,EAAQA,QACR,sBAAMT,UAAU,kBAAhB,SACK,IAAIG,KAAJ,UAASM,EAAQJ,iBAAjB,aAAS,EAAmBC,UAAUC,wBASxD,sBAAKP,UAAU,eAAf,UACI,cAAE,IAAF,IACA,iCACI,uBAAO9B,MAAOM,EAAOmC,SAAU,SAAAC,GAAC,OAAGnC,EAASmC,EAAEC,OAAO3C,QAAQ4C,KAAK,OAAOC,YAAY,oBACrF,wBAAQC,QAvDN,SAACJ,GACfA,EAAEK,iBACFC,QAAQC,IAAI,YAAY3C,GAGxB3B,EAAGuC,WAAW,SAASC,IAAIT,GAAQQ,WAAW,YAAYgC,IAAI,CAC1DX,QAAQjC,EACRiB,KAAKP,EAAKwB,YACVL,UAAUgB,IAAQ9D,UAAU+D,WAAWC,oBAE3C9C,EAAS,KA6CiCqC,KAAK,SAAnC,+BAEJ,cAAE,IAAF,W,sBCnCDU,MAjDf,YAA4C,IAAD,EAArBC,EAAqB,EAArBA,GAAGhC,EAAkB,EAAlBA,KAAKiC,EAAa,EAAbA,WAAa,EAEnBnD,mBAAS,IAFU,mBAEjCG,EAFiC,KAE5BC,EAF4B,OAGXJ,mBAAS,IAHE,mBAGjCS,EAHiC,KAGxBC,EAHwB,KA8BvC,OAzBAE,qBAAU,WACHsC,GACC5E,EAAGuC,WAAW,SAASC,IAAIoC,GAAIrC,WAAW,YAAYM,QAAQ,YAAY,QAAQJ,YAAW,SAACC,GAAD,OAAYN,EAAYM,EAASI,KAAKC,KAAI,SAACP,GAAD,OAAOA,EAAIG,gBAExJ,CAACiC,IAEHtC,qBAAU,WACNR,EAAQkB,KAAKC,MAAsB,IAAhBD,KAAKE,aAE1B,IAgBM2B,EAaJ,qBAAKV,QA3BQ,WACb,IAAMlC,EAAW6C,OAAO,2CAErB7C,GACCjC,EAAGuC,WAAW,SAASgC,IAAI,CACvB3B,KAAKX,KAsBakB,UAAU,cAApC,SACI,gDAbJ,cAAC,IAAD,CAAM4B,GAAE,iBAAYH,GAApB,SAEA,sBAAKzB,UAAU,cAAf,UACI,cAACC,EAAA,EAAD,CAAQC,IAAG,iDAA4CxB,EAA5C,UACX,sBAAKsB,UAAU,oBAAf,UACI,6BAAKP,IACL,sCAAIT,EAAS,UAAb,aAAI,EAAayB,mB,mDCqBlBoB,MAvDf,WAAoB,IAAD,EAEOtD,mBAAS,IAFhB,mBAETuD,EAFS,KAEHC,EAFG,OAGQ3D,IAHR,mBAGRc,EAHQ,KAGRA,KAmBT,OAtBiB,KAKfC,qBAAU,WACN,IAAM6C,EAAYnF,EAAGuC,WAAW,SAASE,YAAW,SAAAC,GAChDwC,EAASxC,EAASI,KAAKC,KAAI,SAACP,GAAD,MAEtB,CACGoC,GAAGpC,EAAIoC,GACPjC,KAAKH,EAAIG,eAMrB,OAAM,WACFwC,OAGN,IAEF,sBAAKhC,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAACC,EAAA,EAAD,CAAQC,IAAG,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAM+C,WACnB,sBAAKjC,UAAU,uBAAf,UACE,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,YAIN,qBAAKR,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,IAAD,IACA,uBAAOe,YAAY,6BAA6BD,KAAK,cAGzD,sBAAKd,UAAU,iBAAf,UACI,cAAC,EAAD,CAAa0B,YAAU,IACtBI,EAAMlC,KAAI,SAAAsC,GAAI,OACX,cAAC,EAAD,CAA2BT,GAAIS,EAAKT,GAAIhC,KAAMyC,EAAK1C,KAAKC,MAAtCyC,EAAKT,c,iCCtDxBU,EACA,WAeErE,EAbD,SAACsE,EAAMC,GAEjB,OADAnB,QAAQC,IAAIkB,GACJA,EAAOvB,MACX,KAAKqB,EACD,kCACOC,GADP,IAEIlD,KAAKmD,EAAOnD,OAGhB,QACI,OAAOkD,ICoBRE,MA7Bf,WAAkB,IAAD,EACMlE,IADN,yCACJmE,EADI,KAcb,OACI,qBAAKvC,UAAU,QAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKE,IAAI,gGAAgGsC,IAAI,UAC7G,qBAAKxC,UAAU,cAAf,SACI,uDAEJ,cAACyC,EAAA,EAAD,CAAQzB,QAlBP,WACTxD,EAAKkF,gBAAgBjF,GACpBkF,MAAK,SAACC,GACHL,EAAS,CACLzB,KAAKqB,EACLjD,KAAK0D,EAAO1D,UAGnB2D,OAAM,SAACC,GAAD,OAASC,MAAMD,EAAMrC,aAUpB,uCCQDuC,MA5Bf,WAAgB,IAAD,EACU5E,IADV,mBACNc,EADM,KACNA,KACP,OAFa,KAGX,qBAAKc,UAAU,MAAf,SACId,EAGA,qBAAKc,UAAU,YAAf,SACA,eAAC,IAAD,WACI,cAAC,EAAD,IACF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,iBAAZ,SAEE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAXN,cAAC,EAAD,OCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAe7F,aJVO,CACtBmB,KAAK,MISsCpB,QAASA,EAApD,SAEA,cAAC,EAAD,QAGF+F,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72d8fa80.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAabx0YNtqaodeKyWal6VMsNQBV8ABYgWw\",\r\n    authDomain: \"whatsapp-clone-6ac36.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-6ac36\",\r\n    storageBucket: \"whatsapp-clone-6ac36.appspot.com\",\r\n    messagingSenderId: \"3141083146\",\r\n    appId: \"1:3141083146:web:532798f9a72fd0f0283ff3\",\r\n    measurementId: \"G-5ED1943GMJ\"\r\n  };\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig)\r\n  const db=firebaseApp.firestore()\r\n  const auth=firebase.auth()\r\n  const provider =new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {auth,provider};\r\n  export default db;","import React,{createContext,useContext,useReducer} from 'react'\r\nexport const StateContext =createContext();\r\nexport const StateProvider =({reducer,initialState,children})=>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\nexport const useStateValue=()=>useContext(StateContext);","import { Avatar, IconButton } from '@material-ui/core'\r\nimport React, { useState,useEffect } from 'react'\r\nimport './Chat.css'\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase'\r\nimport firbase from 'firebase'\r\nimport { useStateValue } from './StateProvider';\r\nfunction Chat() {\r\n    const[input,setInput]=useState()\r\n    const[seed,setSeed]=useState()\r\n    const{roomId} =useParams();\r\n    const[roomName,setRoomName]=useState()\r\n    const[messages,setMessages]=useState([])\r\n    const[{user},dispatch]=useStateValue();\r\n\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot=>setRoomName(snapshot.data().name));\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy('timestamp','asc').onSnapshot(snapshot=>(setMessages(snapshot.docs.map(doc=>doc.data()))))\r\n        }\r\n       \r\n\r\n    },[roomId]);\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n\r\n    },[]);\r\n\r\n    const sendMessage=(e)=>{\r\n        e.preventDefault();\r\n        console.log(\"you typed\",input)\r\n\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name:user.displayName,\r\n            timestamp:firbase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setInput(\"\");\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar  src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>last seen{\" \"}{new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlinedIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFileOutlinedIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertOutlinedIcon/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map(message=>(\r\n                     <p className={`chat__message ${message.name===user.displayName && \"chat__receiver\"}`}>\r\n                     <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                         <span className=\"chat__timestamp\">\r\n                             {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                         </span>\r\n                        \r\n                     </p>\r\n\r\n                ))}\r\n               \r\n\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                < InsertEmoticonIcon/>\r\n                <form>\r\n                    <input value={input} onChange={e =>setInput(e.target.value)} type=\"text\" placeholder=\"type a messaage\"/>\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                < MicIcon/>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import { Avatar } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './SidebarChat.css'\r\nimport db from \"./firebase\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction SidebarChat({id,name,addNewChat}) {\r\n\r\n    const[seed,setSeed]=useState(\"\")\r\n    const[messages,setMessages]=useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot((snapshot)=>setMessages(snapshot.docs.map((doc)=>doc.data())))\r\n        }\r\n    },[id])\r\n\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n\r\n    },[])\r\n\r\n    const createChat=()=>{\r\n        const roomName = prompt('please enter the name for the chat room');\r\n\r\n        if(roomName){\r\n            db.collection('rooms').add({\r\n                name:roomName,\r\n\r\n            })\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return !addNewChat ?(\r\n        <Link to={`/rooms/${id}`}>\r\n\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className='sidebarChat__info'>\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n            \r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarChat  from './SidebarChat'\r\nimport db from './firebase'\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Sidebar() {\r\n\r\n    const[rooms,setRooms]=useState([])\r\n    const[{user},dispatch]=useStateValue()\r\n\r\n    useEffect(()=>{\r\n        const unsubscribe=db.collection('rooms').onSnapshot(snapshot=>{\r\n            setRooms(snapshot.docs.map((doc)=>\r\n\r\n                ({\r\n                    id:doc.id,\r\n                    data:doc.data()\r\n                })\r\n                \r\n                ))\r\n        });\r\n\r\n        return()=>{\r\n            unsubscribe();\r\n        }\r\n\r\n    },[])\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL}/>\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchOutlinedIcon />\r\n          <input placeholder=\"search or start a new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__chats\">\r\n          <SidebarChat addNewChat />\r\n          {rooms.map(room=>(\r\n              <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n          ))}\r\n         \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","export const initialState={\r\n    user:null,\r\n};\r\nexport const actionTypes={\r\n    SET_USER:\"SET_USER\",\r\n};\r\nconst reducer=(state,action)=>{\r\n    console.log(action)\r\n    switch (action.type){\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user:action.user,\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default reducer;","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { auth,provider } from './firebase'\r\nimport './Login.css'\r\nimport { actionTypes } from './reducer'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Login() {\r\n    const[{},dispatch]=useStateValue()\r\n\r\n    const signIn=()=>{\r\n        auth.signInWithPopup(provider)\r\n        .then((result)=>{\r\n            dispatch({\r\n                type:actionTypes.SET_USER,\r\n                user:result.user,\r\n            })\r\n        })\r\n        .catch((error)=>alert(error.message))\r\n\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\" alt=\"login\" />\r\n                <div className=\"login__text\">\r\n                    <h1>sign in to whatsapp</h1>\r\n                </div>\r\n                <Button onClick={signIn}>\r\n                    Sign In with google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const[{user},dispatch]=useStateValue(\"\")\n  return (\n    <div className=\"app\">\n      {!user ?(\n        <Login />\n      ):(\n        <div className=\"app__body\">\n        <Router>\n            <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n             \n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Chat />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from \"./reducer\"\nimport {StateProvider } from \"./StateProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}